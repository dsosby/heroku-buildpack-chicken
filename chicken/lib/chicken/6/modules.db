(* value scheme)
(+ value scheme)
(- value scheme)
(->char-set value srfi-14)
(->string value data-structures)
(/ value scheme)
(< value scheme)
(<= value scheme)
(= value scheme)
(> value scheme)
(>= value scheme)
(_exit value posix)
(abandoned-mutex-exception? value srfi-18)
(abort value chicken)
(abort-setup value setup-api)
(abs value scheme)
(absolute-pathname? value files)
(acos value scheme)
(add1 value chicken)
(address->pointer value lolevel)
(align-to-word value lolevel)
(alist->hash-table value srfi-69)
(alist-cons value srfi-1)
(alist-copy value srfi-1)
(alist-delete value srfi-1)
(alist-delete! value srfi-1)
(alist-ref value data-structures)
(alist-update! value data-structures)
(allocate value lolevel)
(always? value data-structures)
(and syntax scheme)
(and-let* syntax chicken)
(any value srfi-1)
(any? value data-structures)
(append value scheme)
(append! value srfi-1)
(append-map value srfi-1)
(append-map! value srfi-1)
(append-reverse value srfi-1)
(append-reverse! value srfi-1)
(apply value scheme)
(argc+argv value chicken)
(argv value chicken)
(arithmetic-shift value chicken)
(asin value scheme)
(assert syntax chicken)
(assoc value scheme)
(assoc value srfi-1)
(assq value scheme)
(assv value scheme)
(atan value scheme)
(atom? value data-structures)
(begin syntax scheme)
(begin-for-syntax syntax scheme)
(binary-search value data-structures)
(bit-set? value chicken)
(bitwise-and value chicken)
(bitwise-ior value chicken)
(bitwise-not value chicken)
(bitwise-xor value chicken)
(blob->f32vector value srfi-4)
(blob->f32vector/shared value srfi-4)
(blob->f64vector value srfi-4)
(blob->f64vector/shared value srfi-4)
(blob->s16vector value srfi-4)
(blob->s16vector/shared value srfi-4)
(blob->s32vector value srfi-4)
(blob->s32vector/shared value srfi-4)
(blob->s8vector value srfi-4)
(blob->s8vector/shared value srfi-4)
(blob->string value chicken)
(blob->u16vector value srfi-4)
(blob->u16vector/shared value srfi-4)
(blob->u32vector value srfi-4)
(blob->u32vector/shared value srfi-4)
(blob->u8vector value srfi-4)
(blob->u8vector/shared value srfi-4)
(blob-size value chicken)
(blob=? value chicken)
(blob? value chicken)
(block-device? value posix)
(block-ref value lolevel)
(block-set! value lolevel)
(boolean? value scheme)
(break value srfi-1)
(break! value srfi-1)
(build-platform value chicken)
(butlast value data-structures)
(c-runtime value chicken)
(caaaar value scheme)
(caaadr value scheme)
(caaar value scheme)
(caadar value scheme)
(caaddr value scheme)
(caadr value scheme)
(caar value scheme)
(cadaar value scheme)
(cadadr value scheme)
(cadar value scheme)
(caddar value scheme)
(cadddr value scheme)
(caddr value scheme)
(cadr value scheme)
(call-with-current-continuation value scheme)
(call-with-input-file value scheme)
(call-with-input-pipe value posix)
(call-with-input-string value ports)
(call-with-output-file value scheme)
(call-with-output-pipe value posix)
(call-with-output-string value ports)
(call-with-values value scheme)
(call/cc value chicken)
(car value scheme)
(car+cdr value srfi-1)
(case syntax scheme)
(case-lambda syntax chicken)
(case-sensitive value chicken)
(cdaaar value scheme)
(cdaadr value scheme)
(cdaar value scheme)
(cdadar value scheme)
(cdaddr value scheme)
(cdadr value scheme)
(cdar value scheme)
(cddaar value scheme)
(cddadr value scheme)
(cddar value scheme)
(cdddar value scheme)
(cddddr value scheme)
(cdddr value scheme)
(cddr value scheme)
(cdr value scheme)
(ceiling value scheme)
(change-directory value posix)
(change-file-mode value posix)
(change-file-owner value posix)
(char->integer value scheme)
(char-alphabetic? value scheme)
(char-ci<=? value scheme)
(char-ci<? value scheme)
(char-ci=? value scheme)
(char-ci>=? value scheme)
(char-ci>? value scheme)
(char-downcase value scheme)
(char-lower-case? value scheme)
(char-name value chicken)
(char-numeric? value scheme)
(char-ready? value scheme)
(char-set value srfi-14)
(char-set->list value srfi-14)
(char-set->string value srfi-14)
(char-set-adjoin value srfi-14)
(char-set-adjoin! value srfi-14)
(char-set-any value srfi-14)
(char-set-complement value srfi-14)
(char-set-complement! value srfi-14)
(char-set-contains? value srfi-14)
(char-set-copy value srfi-14)
(char-set-count value srfi-14)
(char-set-cursor value srfi-14)
(char-set-cursor-next value srfi-14)
(char-set-delete value srfi-14)
(char-set-delete! value srfi-14)
(char-set-diff+intersection value srfi-14)
(char-set-diff+intersection! value srfi-14)
(char-set-difference value srfi-14)
(char-set-difference! value srfi-14)
(char-set-every value srfi-14)
(char-set-filter value srfi-14)
(char-set-filter! value srfi-14)
(char-set-fold value srfi-14)
(char-set-for-each value srfi-14)
(char-set-hash value srfi-14)
(char-set-intersection value srfi-14)
(char-set-intersection! value srfi-14)
(char-set-map value srfi-14)
(char-set-ref value srfi-14)
(char-set-size value srfi-14)
(char-set-unfold value srfi-14)
(char-set-unfold! value srfi-14)
(char-set-union value srfi-14)
(char-set-union! value srfi-14)
(char-set-xor value srfi-14)
(char-set-xor! value srfi-14)
(char-set:ascii value srfi-14)
(char-set:blank value srfi-14)
(char-set:digit value srfi-14)
(char-set:empty value srfi-14)
(char-set:full value srfi-14)
(char-set:graphic value srfi-14)
(char-set:hex-digit value srfi-14)
(char-set:iso-control value srfi-14)
(char-set:letter value srfi-14)
(char-set:letter+digit value srfi-14)
(char-set:lower-case value srfi-14)
(char-set:printing value srfi-14)
(char-set:punctuation value srfi-14)
(char-set:s value srfi-14)
(char-set:symbol value srfi-14)
(char-set:title-case value srfi-14)
(char-set:upper-case value srfi-14)
(char-set:whitespace value srfi-14)
(char-set<= value srfi-14)
(char-set= value srfi-14)
(char-set? value srfi-14)
(char-upcase value scheme)
(char-upper-case? value scheme)
(char-whitespace? value scheme)
(char<=? value scheme)
(char<? value scheme)
(char=? value scheme)
(char>=? value scheme)
(char>? value scheme)
(char? value scheme)
(character-device? value posix)
(check-substring-spec value srfi-13)
(chicken-home value chicken)
(chicken-prefix value setup-api)
(chicken-version value chicken)
(chop value data-structures)
(circular-list value srfi-1)
(circular-list? value srfi-1)
(close-input-pipe value posix)
(close-input-port value scheme)
(close-output-pipe value posix)
(close-output-port value scheme)
(command-line-arguments value chicken)
(compile syntax setup-api)
(compile-file value utils)
(complement value data-structures)
(complex? value scheme)
(compose value data-structures)
(compress value data-structures)
(conc value data-structures)
(concatenate value srfi-1)
(concatenate! value srfi-1)
(cond syntax scheme)
(cond-expand syntax scheme)
(condition->list value chicken)
(condition-case syntax chicken)
(condition-predicate value chicken)
(condition-property-accessor value chicken)
(condition-variable-broadcast! value srfi-18)
(condition-variable-name value srfi-18)
(condition-variable-signal! value srfi-18)
(condition-variable-specific value srfi-18)
(condition-variable-specific-set! value srfi-18)
(condition-variable? value srfi-18)
(condition? value chicken)
(conjoin value data-structures)
(cons value scheme)
(cons* value srfi-1)
(constantly value data-structures)
(continuation-capture value chicken)
(continuation-graft value chicken)
(continuation-return value chicken)
(continuation? value chicken)
(copy-file value setup-api)
(copy-port value ports)
(copy-read-table value chicken)
(cos value scheme)
(count value srfi-1)
(cpu-time value chicken)
(create-directory value posix)
(create-directory/parents value setup-api)
(create-fifo value posix)
(create-pipe value posix)
(create-session value posix)
(create-symbolic-link value posix)
(create-temporary-directory value files)
(create-temporary-file value files)
(current-directory value posix)
(current-effective-group-id value posix)
(current-effective-user-id value posix)
(current-effective-user-name value posix)
(current-error-port value chicken)
(current-exception-handler value chicken)
(current-gc-milliseconds value chicken)
(current-group-id value posix)
(current-input-port value scheme)
(current-milliseconds value chicken)
(current-output-port value scheme)
(current-process-id value posix)
(current-read-table value chicken)
(current-seconds value chicken)
(current-thread value srfi-18)
(current-time value srfi-18)
(current-user-id value posix)
(current-user-name value posix)
(cut syntax chicken)
(cute syntax chicken)
(declare syntax chicken)
(decompose-directory value files)
(decompose-pathname value files)
(define syntax scheme)
(define-compiler-syntax syntax chicken)
(define-constant syntax chicken)
(define-external syntax foreign)
(define-for-syntax syntax chicken)
(define-foreign-type syntax foreign)
(define-foreign-variable syntax foreign)
(define-inline syntax chicken)
(define-location syntax foreign)
(define-reader-ctor value chicken)
(define-record syntax chicken)
(define-record-printer syntax chicken)
(define-record-type syntax chicken)
(define-syntax syntax scheme)
(define-values syntax chicken)
(delay syntax scheme)
(delete value srfi-1)
(delete! value srfi-1)
(delete-directory value posix)
(delete-duplicates value srfi-1)
(delete-duplicates! value srfi-1)
(delete-file value chicken)
(delete-file* value files)
(denominator value scheme)
(deployment-mode value setup-api)
(destination-prefix value setup-api)
(directory value posix)
(directory-exists? value chicken)
(directory-null? value files)
(directory? value posix)
(disjoin value data-structures)
(display value scheme)
(do syntax scheme)
(dotted-list? value srfi-1)
(drop value srfi-1)
(drop-right value srfi-1)
(drop-right! value srfi-1)
(drop-while value srfi-1)
(duplicate-fileno value posix)
(dynamic-load-libraries value chicken)
(dynamic-wind value scheme)
(each value data-structures)
(editor-command value csi)
(eighth value srfi-1)
(else value scheme)
(enable-warnings value chicken)
(end-of-char-set? value srfi-14)
(ensure syntax chicken)
(eof-object? value scheme)
(eq? value scheme)
(eq?-hash value srfi-69)
(equal=? value chicken)
(equal? value scheme)
(equal?-hash value srfi-69)
(eqv? value scheme)
(eqv?-hash value srfi-69)
(er-macro-transformer value chicken)
(errno value chicken)
(errno/2big value posix)
(errno/acces value posix)
(errno/again value posix)
(errno/badf value posix)
(errno/busy value posix)
(errno/child value posix)
(errno/deadlk value posix)
(errno/dom value posix)
(errno/exist value posix)
(errno/fault value posix)
(errno/fbig value posix)
(errno/ilseq value posix)
(errno/intr value posix)
(errno/inval value posix)
(errno/io value posix)
(errno/isdir value posix)
(errno/mfile value posix)
(errno/mlink value posix)
(errno/nametoolong value posix)
(errno/nfile value posix)
(errno/nodev value posix)
(errno/noent value posix)
(errno/noexec value posix)
(errno/nolck value posix)
(errno/nomem value posix)
(errno/nospc value posix)
(errno/nosys value posix)
(errno/notdir value posix)
(errno/notempty value posix)
(errno/notty value posix)
(errno/nxio value posix)
(errno/perm value posix)
(errno/pipe value posix)
(errno/range value posix)
(errno/rofs value posix)
(errno/spipe value posix)
(errno/srch value posix)
(errno/wouldblock value posix)
(errno/xdev value posix)
(error value chicken)
(eval value scheme)
(eval-handler value chicken)
(eval-when syntax chicken)
(even? value scheme)
(every value srfi-1)
(exact->inexact value scheme)
(exact? value scheme)
(exit value chicken)
(exit-handler value chicken)
(exp value scheme)
(expand value chicken)
(export syntax scheme)
(expt value scheme)
(extend-procedure value lolevel)
(extended-procedure? value lolevel)
(extension-information value chicken)
(extension-name value setup-api)
(extension-name-and-version value setup-api)
(extension-version value setup-api)
(extra-features value setup-api)
(extra-nonfeatures value setup-api)
(f32vector value srfi-4)
(f32vector->blob value srfi-4)
(f32vector->blob/shared value srfi-4)
(f32vector->byte-vector value srfi-4)
(f32vector->list value srfi-4)
(f32vector-length value srfi-4)
(f32vector-ref value srfi-4)
(f32vector-set! value srfi-4)
(f32vector? value srfi-4)
(f64vector value srfi-4)
(f64vector->blob value srfi-4)
(f64vector->blob/shared value srfi-4)
(f64vector->byte-vector value srfi-4)
(f64vector->list value srfi-4)
(f64vector-length value srfi-4)
(f64vector-ref value srfi-4)
(f64vector-set! value srfi-4)
(f64vector? value srfi-4)
(fcntl/dupfd value posix)
(fcntl/getfd value posix)
(fcntl/getfl value posix)
(fcntl/setfd value posix)
(fcntl/setfl value posix)
(feature? value chicken)
(features value chicken)
(fifo? value posix)
(fifo? value posix)
(fifth value srfi-1)
(file-access-time value posix)
(file-change-time value posix)
(file-close value posix)
(file-control value posix)
(file-copy value files)
(file-creation-mode value posix)
(file-execute-access? value posix)
(file-exists? value chicken)
(file-link value posix)
(file-lock value posix)
(file-lock/blocking value posix)
(file-mkstemp value posix)
(file-modification-time value posix)
(file-move value files)
(file-open value posix)
(file-owner value posix)
(file-permissions value posix)
(file-position value posix)
(file-read value posix)
(file-read-access? value posix)
(file-select value posix)
(file-size value posix)
(file-stat value posix)
(file-test-lock value posix)
(file-truncate value posix)
(file-unlock value posix)
(file-write value posix)
(file-write-access? value posix)
(fileno/stderr value posix)
(fileno/stdin value posix)
(fileno/stdout value posix)
(filter value srfi-1)
(filter! value srfi-1)
(filter-map value srfi-1)
(find value srfi-1)
(find-files value posix)
(find-header value setup-api)
(find-library value setup-api)
(find-program value setup-api)
(find-tail value srfi-1)
(finite? value chicken)
(first value srfi-1)
(fixnum-bits value chicken)
(fixnum-precision value chicken)
(fixnum? value chicken)
(flatten value data-structures)
(flip value data-structures)
(flonum-decimal-precision value chicken)
(flonum-epsilon value chicken)
(flonum-maximum-decimal-exponent value chicken)
(flonum-maximum-exponent value chicken)
(flonum-minimum-decimal-exponent value chicken)
(flonum-minimum-exponent value chicken)
(flonum-precision value chicken)
(flonum-print-precision value chicken)
(flonum-radix value chicken)
(flonum? value chicken)
(floor value scheme)
(fluid-let syntax chicken)
(flush-output value chicken)
(fold value srfi-1)
(fold-right value srfi-1)
(for-each value scheme)
(force value scheme)
(force-finalizers value chicken)
(foreign-code syntax foreign)
(foreign-declare syntax foreign)
(foreign-lambda syntax foreign)
(foreign-lambda* syntax foreign)
(foreign-primitive syntax foreign)
(foreign-safe-lambda syntax foreign)
(foreign-safe-lambda* syntax foreign)
(foreign-type-size syntax foreign)
(foreign-value syntax foreign)
(format value extras)
(fourth value srfi-1)
(fp* value chicken)
(fp+ value chicken)
(fp- value chicken)
(fp/ value chicken)
(fp< value chicken)
(fp<= value chicken)
(fp= value chicken)
(fp> value chicken)
(fp>= value chicken)
(fpabs value chicken)
(fpacos value chicken)
(fpasin value chicken)
(fpatan value chicken)
(fpatan2 value chicken)
(fpceiling value chicken)
(fpcos value chicken)
(fpexp value chicken)
(fpexpt value chicken)
(fpfloor value chicken)
(fpinteger? value chicken)
(fplog value chicken)
(fpmax value chicken)
(fpmin value chicken)
(fpneg value chicken)
(fprintf value extras)
(fpround value chicken)
(fpsin value chicken)
(fpsqrt value chicken)
(fptan value chicken)
(fptruncate value chicken)
(free value lolevel)
(fx* value chicken)
(fx+ value chicken)
(fx- value chicken)
(fx/ value chicken)
(fx< value chicken)
(fx<= value chicken)
(fx= value chicken)
(fx> value chicken)
(fx>= value chicken)
(fxand value chicken)
(fxeven? value chicken)
(fxior value chicken)
(fxmax value chicken)
(fxmin value chicken)
(fxmod value chicken)
(fxneg value chicken)
(fxnot value chicken)
(fxodd? value chicken)
(fxshl value chicken)
(fxshr value chicken)
(fxxor value chicken)
(gather-egg-information value setup-download)
(gc value chicken)
(gcd value scheme)
(gensym value chicken)
(get value chicken)
(get-call-chain value chicken)
(get-condition-property value chicken)
(get-environment-variable value chicken)
(get-environment-variables value posix)
(get-groups value posix)
(get-host-name value posix)
(get-keyword value chicken)
(get-output-string value chicken)
(get-properties value chicken)
(getter-with-setter value chicken)
(glob value posix)
(group-information value posix)
(handle-exceptions syntax chicken)
(hash value srfi-69)
(hash-by-identity value srfi-69)
(hash-table->alist value srfi-69)
(hash-table-clear! value srfi-69)
(hash-table-copy value srfi-69)
(hash-table-delete! value srfi-69)
(hash-table-equivalence-function value srfi-69)
(hash-table-exists? value srfi-69)
(hash-table-fold value srfi-69)
(hash-table-for-each value srfi-69)
(hash-table-has-initial? value srfi-69)
(hash-table-hash-function value srfi-69)
(hash-table-initial value srfi-69)
(hash-table-keys value srfi-69)
(hash-table-map value srfi-69)
(hash-table-max-load value srfi-69)
(hash-table-merge value srfi-69)
(hash-table-merge! value srfi-69)
(hash-table-min-load value srfi-69)
(hash-table-ref value srfi-69)
(hash-table-ref/default value srfi-69)
(hash-table-remove! value srfi-69)
(hash-table-set! value srfi-69)
(hash-table-size value srfi-69)
(hash-table-update! value srfi-69)
(hash-table-update!/default value srfi-69)
(hash-table-values value srfi-69)
(hash-table-walk value srfi-69)
(hash-table-weak-keys value srfi-69)
(hash-table-weak-values value srfi-69)
(hash-table? value srfi-69)
(host-extension value setup-api)
(identity value data-structures)
(if syntax scheme)
(imag-part value scheme)
(implicit-exit-handler value chicken)
(import syntax scheme)
(import-for-syntax syntax scheme)
(include syntax chicken)
(inexact->exact value scheme)
(inexact? value scheme)
(initialize-groups value posix)
(input-port? value scheme)
(install-extension value setup-api)
(install-program value setup-api)
(install-script value setup-api)
(installation-prefix value setup-api)
(integer->char value scheme)
(integer? value scheme)
(interaction-environment value scheme)
(intersperse value data-structures)
(iota value srfi-1)
(ir-macro-transformer value chicken)
(irregex value irregex)
(irregex-apply-match value irregex)
(irregex-dfa value irregex)
(irregex-dfa/extract value irregex)
(irregex-dfa/search value irregex)
(irregex-extract value irregex)
(irregex-flags value irregex)
(irregex-fold value irregex)
(irregex-fold/chunked value irregex)
(irregex-lengths value irregex)
(irregex-match value irregex)
(irregex-match-data? value irregex)
(irregex-match-end-chunk value irregex)
(irregex-match-end-index value irregex)
(irregex-match-names value irregex)
(irregex-match-num-submatches value irregex)
(irregex-match-start-chunk value irregex)
(irregex-match-start-index value irregex)
(irregex-match-string value irregex)
(irregex-match-subchunk value irregex)
(irregex-match-substring value irregex)
(irregex-match-valid-index? value irregex)
(irregex-match/chunked value irregex)
(irregex-match? value irregex)
(irregex-names value irregex)
(irregex-new-matches value irregex)
(irregex-nfa value irregex)
(irregex-num-submatches value irregex)
(irregex-opt value irregex)
(irregex-quote value irregex)
(irregex-replace value irregex)
(irregex-replace/all value irregex)
(irregex-reset-matches! value irregex)
(irregex-search value irregex)
(irregex-search/chunked value irregex)
(irregex-search/matches value irregex)
(irregex-split value irregex)
(irregex? value irregex)
(join value data-structures)
(join-timeout-exception? value srfi-18)
(keep-intermediates value setup-api)
(keyword->string value chicken)
(keyword-hash value srfi-69)
(keyword-style value chicken)
(keyword? value chicken)
(kmp-step value srfi-13)
(lambda syntax scheme)
(last value srfi-1)
(last-pair value srfi-1)
(lcm value scheme)
(length value scheme)
(length+ value srfi-1)
(let syntax scheme)
(let* syntax scheme)
(let*-values syntax chicken)
(let-compiler-syntax syntax chicken)
(let-location syntax foreign)
(let-optionals syntax chicken)
(let-optionals* syntax chicken)
(let-string-start+end syntax srfi-13)
(let-syntax syntax scheme)
(let-values syntax chicken)
(letrec syntax scheme)
(letrec-syntax syntax scheme)
(letrec-values syntax chicken)
(list value scheme)
(list->char-set value srfi-14)
(list->char-set! value srfi-14)
(list->f32vector value srfi-4)
(list->f64vector value srfi-4)
(list->queue value data-structures)
(list->s16vector value srfi-4)
(list->s32vector value srfi-4)
(list->s8vector value srfi-4)
(list->string value scheme)
(list->u16vector value srfi-4)
(list->u32vector value srfi-4)
(list->u8vector value srfi-4)
(list->vector value scheme)
(list-copy value srfi-1)
(list-extension-versions value setup-download)
(list-extensions value setup-download)
(list-index value srfi-1)
(list-of? value data-structures)
(list-ref value scheme)
(list-tabulate value srfi-1)
(list-tail value scheme)
(list= value srfi-1)
(list? value scheme)
(load value scheme)
(load-library value chicken)
(load-relative value chicken)
(load-verbose value chicken)
(local-time->seconds value posix)
(local-timezone-abbreviation value posix)
(locate-egg/http value setup-download)
(locate-egg/local value setup-download)
(locate-egg/svn value setup-download)
(location syntax foreign)
(locative->object value lolevel)
(locative-ref value lolevel)
(locative-set! value lolevel)
(locative? value lolevel)
(log value scheme)
(lset-adjoin value srfi-1)
(lset-diff+intersection value srfi-1)
(lset-diff+intersection! value srfi-1)
(lset-difference value srfi-1)
(lset-difference! value srfi-1)
(lset-intersection value srfi-1)
(lset-intersection! value srfi-1)
(lset-union value srfi-1)
(lset-union! value srfi-1)
(lset-xor value srfi-1)
(lset-xor! value srfi-1)
(lset<= value srfi-1)
(lset= value srfi-1)
(machine-byte-order value chicken)
(machine-type value chicken)
(magnitude value scheme)
(make syntax setup-api)
(make-absolute-pathname value files)
(make-blob value chicken)
(make-broadcast-port value ports)
(make-char-set value srfi-14)
(make-composite-condition value chicken)
(make-concatenated-port value ports)
(make-condition-variable value srfi-18)
(make-f32vector value srfi-4)
(make-f64vector value srfi-4)
(make-hash-table value srfi-69)
(make-input-port value ports)
(make-irregex-chunker value irregex)
(make-kmp-restart-vector value srfi-13)
(make-list value srfi-1)
(make-locative value lolevel)
(make-mutex value srfi-18)
(make-output-port value ports)
(make-parameter value chicken)
(make-pathname value files)
(make-pointer-vector value lolevel)
(make-property-condition value chicken)
(make-queue value data-structures)
(make-record-instance value lolevel)
(make-s16vector value srfi-4)
(make-s32vector value srfi-4)
(make-s8vector value srfi-4)
(make-string value scheme)
(make-thread value srfi-18)
(make-u16vector value srfi-4)
(make-u32vector value srfi-4)
(make-u8vector value srfi-4)
(make-vector value scheme)
(make-weak-locative value lolevel)
(make/proc value setup-api)
(map value scheme)
(map value srfi-1)
(map! value srfi-1)
(map-file-to-memory value posix)
(map-in-order value srfi-1)
(map/anonymous value posix)
(map/file value posix)
(map/fixed value posix)
(map/private value posix)
(map/shared value posix)
(max value scheme)
(maximum-flonum value chicken)
(maybe-string->sre value irregex)
(member value scheme)
(member value srfi-1)
(memory-mapped-file-pointer value posix)
(memory-mapped-file? value posix)
(memory-statistics value chicken)
(memq value scheme)
(memv value scheme)
(merge value data-structures)
(merge! value data-structures)
(min value scheme)
(minimum-flonum value chicken)
(module syntax scheme)
(modulo value scheme)
(most-negative-fixnum value chicken)
(most-positive-fixnum value chicken)
(move-file value setup-api)
(move-memory! value lolevel)
(mutate-procedure value lolevel)
(mutex-lock! value srfi-18)
(mutex-name value srfi-18)
(mutex-specific value srfi-18)
(mutex-specific-set! value srfi-18)
(mutex-state value srfi-18)
(mutex-unlock! value srfi-18)
(mutex? value srfi-18)
(negative? value scheme)
(never? value data-structures)
(newline value scheme)
(ninth value srfi-1)
(none? value data-structures)
(normalize-pathname value files)
(not value scheme)
(not-pair? value srfi-1)
(nth-value syntax chicken)
(null-environment value scheme)
(null-list? value srfi-1)
(null-pointer value lolevel)
(null-pointer? value lolevel)
(null? value scheme)
(number->string value scheme)
(number-hash value srfi-69)
(number-of-bytes value lolevel)
(number-of-slots value lolevel)
(number? value scheme)
(numerator value scheme)
(o value data-structures)
(object->pointer value lolevel)
(object-become! value lolevel)
(object-copy value lolevel)
(object-evict value lolevel)
(object-evict-to-location value lolevel)
(object-evicted? value lolevel)
(object-release value lolevel)
(object-size value lolevel)
(object-uid-hash value srfi-69)
(object-unevict value lolevel)
(odd? value scheme)
(on-exit value chicken)
(open-input-file value scheme)
(open-input-file* value posix)
(open-input-pipe value posix)
(open-input-string value chicken)
(open-output-file value scheme)
(open-output-file* value posix)
(open-output-pipe value posix)
(open-output-string value chicken)
(open/append value posix)
(open/binary value posix)
(open/creat value posix)
(open/excl value posix)
(open/fsync value posix)
(open/noctty value posix)
(open/nonblock value posix)
(open/rdonly value posix)
(open/rdwr value posix)
(open/read value posix)
(open/sync value posix)
(open/text value posix)
(open/trunc value posix)
(open/write value posix)
(open/wronly value posix)
(optional syntax chicken)
(or syntax scheme)
(output-port? value scheme)
(pair-fold value srfi-1)
(pair-fold-right value srfi-1)
(pair-for-each value srfi-1)
(pair? value scheme)
(parameterize syntax chicken)
(parent-process-id value posix)
(parentheses-synonyms value chicken)
(partition value srfi-1)
(partition! value srfi-1)
(patch value setup-api)
(pathname-directory value files)
(pathname-extension value files)
(pathname-file value files)
(pathname-replace-directory value files)
(pathname-replace-extension value files)
(pathname-replace-file value files)
(pathname-strip-directory value files)
(pathname-strip-extension value files)
(peek-char value scheme)
(perm/irgrp value posix)
(perm/iroth value posix)
(perm/irusr value posix)
(perm/irwxg value posix)
(perm/irwxo value posix)
(perm/irwxu value posix)
(perm/isgid value posix)
(perm/isuid value posix)
(perm/isvtx value posix)
(perm/iwgrp value posix)
(perm/iwoth value posix)
(perm/iwusr value posix)
(perm/ixgrp value posix)
(perm/ixoth value posix)
(perm/ixusr value posix)
(pipe/buf value posix)
(pointer+ value lolevel)
(pointer->address value lolevel)
(pointer->object value lolevel)
(pointer-f32-ref value lolevel)
(pointer-f32-set! value lolevel)
(pointer-f64-ref value lolevel)
(pointer-f64-set! value lolevel)
(pointer-like? value lolevel)
(pointer-offset value lolevel)
(pointer-s16-ref value lolevel)
(pointer-s16-set! value lolevel)
(pointer-s32-ref value lolevel)
(pointer-s32-set! value lolevel)
(pointer-s8-ref value lolevel)
(pointer-s8-set! value lolevel)
(pointer-tag value lolevel)
(pointer-u16-ref value lolevel)
(pointer-u16-set! value lolevel)
(pointer-u32-ref value lolevel)
(pointer-u32-set! value lolevel)
(pointer-u8-ref value lolevel)
(pointer-u8-set! value lolevel)
(pointer-vector value lolevel)
(pointer-vector-length value lolevel)
(pointer-vector-ref value lolevel)
(pointer-vector-set! value lolevel)
(pointer-vector? value lolevel)
(pointer=? value lolevel)
(pointer? value lolevel)
(port->fileno value posix)
(port-closed? value chicken)
(port-fold value ports)
(port-for-each value ports)
(port-map value ports)
(port-name value chicken)
(port-position value chicken)
(port? value chicken)
(positive? value scheme)
(pp value extras)
(pretty-print value extras)
(pretty-print-width value extras)
(print value chicken)
(print* value chicken)
(print-call-chain value chicken)
(print-error-message value chicken)
(printf value extras)
(procedure-data value lolevel)
(procedure-information value chicken)
(procedure? value scheme)
(process value posix)
(process* value posix)
(process-execute value posix)
(process-fork value posix)
(process-group-id value posix)
(process-run value posix)
(process-signal value posix)
(process-wait value posix)
(program-name value chicken)
(program-path value setup-api)
(promise? value chicken)
(proper-list? value srfi-1)
(prot/exec value posix)
(prot/none value posix)
(prot/read value posix)
(prot/write value posix)
(put! value chicken)
(qs value utils)
(quasiquote syntax scheme)
(queue->list value data-structures)
(queue-add! value data-structures)
(queue-empty? value data-structures)
(queue-first value data-structures)
(queue-last value data-structures)
(queue-push-back! value data-structures)
(queue-push-back-list! value data-structures)
(queue-remove! value data-structures)
(queue? value data-structures)
(quote syntax scheme)
(quotient value scheme)
(raise value srfi-18)
(random value extras)
(randomize value extras)
(rassoc value data-structures)
(rational? value scheme)
(read value scheme)
(read-all value utils)
(read-buffered value extras)
(read-byte value extras)
(read-char value scheme)
(read-file value extras)
(read-info value setup-api)
(read-line value extras)
(read-lines value extras)
(read-string value extras)
(read-string! value extras)
(read-symbolic-link value posix)
(read-token value extras)
(read-u8vector value srfi-4)
(read-u8vector! value srfi-4)
(real-part value scheme)
(real? value scheme)
(rec syntax chicken)
(receive syntax chicken)
(record->vector value lolevel)
(record-instance-length value lolevel)
(record-instance-slot value lolevel)
(record-instance-slot-set! value lolevel)
(record-instance-type value lolevel)
(record-instance? value lolevel)
(reduce value srfi-1)
(reduce-right value srfi-1)
(reexport syntax scheme)
(register-feature! value chicken)
(register-program value setup-api)
(regular-file? value posix)
(release-number-vector value srfi-4)
(remainder value scheme)
(remove value srfi-1)
(remove! value srfi-1)
(remove-directory value setup-api)
(remove-extension value setup-api)
(remove-file* value setup-api)
(remprop! value chicken)
(rename-file value chicken)
(repl value chicken)
(repl-prompt value chicken)
(repository-path value chicken)
(require value chicken)
(require-extension syntax scheme)
(require-library syntax scheme)
(required-chicken-version value setup-api)
(required-extension-version value setup-api)
(reset value chicken)
(reset-handler value chicken)
(retrieve-extension value setup-download)
(return-to-host value chicken)
(reverse value scheme)
(reverse! value srfi-1)
(reverse-list->string value chicken)
(reverse-string-append value data-structures)
(round value scheme)
(run syntax setup-api)
(run-verbose value setup-api)
(runtime-prefix value setup-api)
(s16vector value srfi-4)
(s16vector->blob value srfi-4)
(s16vector->blob/shared value srfi-4)
(s16vector->byte-vector value srfi-4)
(s16vector->list value srfi-4)
(s16vector-length value srfi-4)
(s16vector-ref value srfi-4)
(s16vector-set! value srfi-4)
(s16vector? value srfi-4)
(s32vector value srfi-4)
(s32vector->blob value srfi-4)
(s32vector->blob/shared value srfi-4)
(s32vector->byte-vector value srfi-4)
(s32vector->list value srfi-4)
(s32vector-length value srfi-4)
(s32vector-ref value srfi-4)
(s32vector-set! value srfi-4)
(s32vector? value srfi-4)
(s8vector value srfi-4)
(s8vector->blob value srfi-4)
(s8vector->blob/shared value srfi-4)
(s8vector->byte-vector value srfi-4)
(s8vector->list value srfi-4)
(s8vector-length value srfi-4)
(s8vector-ref value srfi-4)
(s8vector-set! value srfi-4)
(s8vector? value srfi-4)
(scan-input-lines value utils)
(scheme-report-environment value scheme)
(second value srfi-1)
(seconds->local-time value posix)
(seconds->string value posix)
(seconds->time value srfi-18)
(seconds->utc-time value posix)
(seek/cur value posix)
(seek/end value posix)
(seek/set value posix)
(select syntax chicken)
(set! syntax scheme)
(set!-values syntax chicken)
(set-alarm! value posix)
(set-buffering-mode! value posix)
(set-car! value scheme)
(set-cdr! value scheme)
(set-describer! value csi)
(set-file-position! value posix)
(set-finalizer! value chicken)
(set-gc-report! value chicken)
(set-groups! value posix)
(set-parameterized-read-syntax! value chicken)
(set-port-name! value chicken)
(set-procedure-data! value lolevel)
(set-read-syntax! value chicken)
(set-root-directory! value posix)
(set-sharp-read-syntax! value chicken)
(set-signal-handler! value posix)
(set-signal-mask! value posix)
(setenv value posix)
(setter value chicken)
(setup-error-handling value setup-api)
(setup-install-mode value setup-api)
(setup-root-directory value setup-api)
(setup-verbose-mode value setup-api)
(seventh value srfi-1)
(shellpath value setup-api)
(shuffle value data-structures)
(signal value chicken)
(signal-handler value posix)
(signal-mask value posix)
(signal-mask! value posix)
(signal-masked? value posix)
(signal-unmask! value posix)
(signal/abrt value posix)
(signal/alrm value posix)
(signal/chld value posix)
(signal/cont value posix)
(signal/fpe value posix)
(signal/hup value posix)
(signal/ill value posix)
(signal/int value posix)
(signal/io value posix)
(signal/kill value posix)
(signal/pipe value posix)
(signal/prof value posix)
(signal/quit value posix)
(signal/segv value posix)
(signal/stop value posix)
(signal/term value posix)
(signal/trap value posix)
(signal/tstp value posix)
(signal/urg value posix)
(signal/usr1 value posix)
(signal/usr2 value posix)
(signal/vtalrm value posix)
(signal/winch value posix)
(signal/xcpu value posix)
(signal/xfsz value posix)
(signals-list value posix)
(signum value chicken)
(sin value scheme)
(singlestep value chicken)
(sixth value srfi-1)
(sleep value posix)
(socket? value posix)
(software-type value chicken)
(software-version value chicken)
(sort value data-structures)
(sort! value data-structures)
(sorted? value data-structures)
(span value srfi-1)
(span! value srfi-1)
(split-at value srfi-1)
(split-at! value srfi-1)
(sprintf value extras)
(sqrt value scheme)
(sre->irregex value irregex)
(sre->string value irregex)
(standard-extension value setup-api)
(string value scheme)
(string->blob value chicken)
(string->char-set value srfi-14)
(string->char-set! value srfi-14)
(string->irregex value irregex)
(string->keyword value chicken)
(string->list value srfi-13)
(string->list value scheme)
(string->number value scheme)
(string->sre value irregex)
(string->symbol value scheme)
(string->time value posix)
(string->uninterned-symbol value chicken)
(string-any value srfi-13)
(string-append value scheme)
(string-append/shared value srfi-13)
(string-chomp value data-structures)
(string-chop value data-structures)
(string-ci-hash value srfi-69)
(string-ci< value srfi-13)
(string-ci<= value srfi-13)
(string-ci<=? value scheme)
(string-ci<> value srfi-13)
(string-ci<? value scheme)
(string-ci= value srfi-13)
(string-ci=? value scheme)
(string-ci> value srfi-13)
(string-ci>= value srfi-13)
(string-ci>=? value scheme)
(string-ci>? value scheme)
(string-compare value srfi-13)
(string-compare-ci value srfi-13)
(string-compare3 value data-structures)
(string-compare3-ci value data-structures)
(string-concatenate value srfi-13)
(string-concatenate-reverse value srfi-13)
(string-concatenate-reverse/shared value srfi-13)
(string-concatenate/shared value srfi-13)
(string-contains value srfi-13)
(string-contains-ci value srfi-13)
(string-copy value srfi-13)
(string-copy value scheme)
(string-copy! value srfi-13)
(string-count value srfi-13)
(string-delete value srfi-13)
(string-downcase value srfi-13)
(string-downcase! value srfi-13)
(string-drop value srfi-13)
(string-drop-right value srfi-13)
(string-every value srfi-13)
(string-fill! value srfi-13)
(string-fill! value scheme)
(string-filter value srfi-13)
(string-fold value srfi-13)
(string-fold-right value srfi-13)
(string-for-each value srfi-13)
(string-for-each-index value srfi-13)
(string-hash value srfi-69)
(string-hash-ci value srfi-69)
(string-index value srfi-13)
(string-index-right value srfi-13)
(string-intersperse value data-structures)
(string-join value srfi-13)
(string-kmp-partial-search value srfi-13)
(string-length value scheme)
(string-map value srfi-13)
(string-map! value srfi-13)
(string-null? value srfi-13)
(string-pad value srfi-13)
(string-pad-right value srfi-13)
(string-parse-final-start+end value srfi-13)
(string-parse-start+end value srfi-13)
(string-prefix-ci? value srfi-13)
(string-prefix-length value srfi-13)
(string-prefix-length-ci value srfi-13)
(string-prefix? value srfi-13)
(string-ref value scheme)
(string-replace value srfi-13)
(string-reverse value srfi-13)
(string-reverse! value srfi-13)
(string-set! value scheme)
(string-skip value srfi-13)
(string-skip-right value srfi-13)
(string-split value data-structures)
(string-suffix-ci? value srfi-13)
(string-suffix-length value srfi-13)
(string-suffix-length-ci value srfi-13)
(string-suffix? value srfi-13)
(string-tabulate value srfi-13)
(string-take value srfi-13)
(string-take-right value srfi-13)
(string-titlecase value srfi-13)
(string-titlecase! value srfi-13)
(string-tokenize value srfi-13)
(string-translate value data-structures)
(string-translate* value data-structures)
(string-trim value srfi-13)
(string-trim-both value srfi-13)
(string-trim-right value srfi-13)
(string-unfold value srfi-13)
(string-unfold-right value srfi-13)
(string-upcase value srfi-13)
(string-upcase! value srfi-13)
(string-xcopy! value srfi-13)
(string< value srfi-13)
(string<= value srfi-13)
(string<=? value scheme)
(string<> value srfi-13)
(string<? value scheme)
(string= value srfi-13)
(string=? value scheme)
(string> value srfi-13)
(string>= value srfi-13)
(string>=? value scheme)
(string>? value scheme)
(string? value scheme)
(strip-syntax value chicken)
(sub1 value chicken)
(subf32vector value srfi-4)
(subf64vector value srfi-4)
(subs16vector value srfi-4)
(subs32vector value srfi-4)
(subs8vector value srfi-4)
(substring value scheme)
(substring-ci=? value data-structures)
(substring-index value data-structures)
(substring-index-ci value data-structures)
(substring-spec-ok? value srfi-13)
(substring/shared value srfi-13)
(substring=? value data-structures)
(subu16vector value srfi-4)
(subu32vector value srfi-4)
(subu8vector value srfi-4)
(sudo-install value setup-api)
(symbol->string value scheme)
(symbol-append value chicken)
(symbol-escape value chicken)
(symbol-hash value srfi-69)
(symbol-plist value chicken)
(symbol? value scheme)
(symbolic-link? value posix)
(syntax syntax scheme)
(syntax-error value chicken)
(syntax-rules syntax scheme)
(system value chicken)
(system* value utils)
(system-information value posix)
(tag-pointer value lolevel)
(tagged-pointer? value lolevel)
(tail? value data-structures)
(take value srfi-1)
(take! value srfi-1)
(take-right value srfi-1)
(take-while value srfi-1)
(take-while! value srfi-1)
(tan value scheme)
(tcp-abandon-port value tcp)
(tcp-accept value tcp)
(tcp-accept-ready? value tcp)
(tcp-accept-timeout value tcp)
(tcp-addresses value tcp)
(tcp-buffer-size value tcp)
(tcp-close value tcp)
(tcp-connect value tcp)
(tcp-connect-timeout value tcp)
(tcp-listen value tcp)
(tcp-listener-fileno value tcp)
(tcp-listener-port value tcp)
(tcp-listener? value tcp)
(tcp-port-numbers value tcp)
(tcp-read-timeout value tcp)
(tcp-write-timeout value tcp)
(temporary-directory value setup-download)
(tenth value srfi-1)
(terminal-name value posix)
(terminal-port? value posix)
(terminal-size value posix)
(terminated-thread-exception? value srfi-18)
(test-compile value setup-api)
(third value srfi-1)
(thread-join! value srfi-18)
(thread-name value srfi-18)
(thread-quantum value srfi-18)
(thread-quantum-set! value srfi-18)
(thread-resume! value srfi-18)
(thread-signal! value srfi-18)
(thread-sleep! value srfi-18)
(thread-specific value srfi-18)
(thread-specific-set! value srfi-18)
(thread-start! value srfi-18)
(thread-state value srfi-18)
(thread-suspend! value srfi-18)
(thread-terminate! value srfi-18)
(thread-wait-for-i/o! value srfi-18)
(thread-yield! value srfi-18)
(thread? value srfi-18)
(time syntax chicken)
(time->seconds value srfi-18)
(time->string value posix)
(time? value srfi-18)
(toplevel-command value csi)
(topological-sort value data-structures)
(truncate value scheme)
(try-compile value setup-api)
(u16vector value srfi-4)
(u16vector->blob value srfi-4)
(u16vector->blob/shared value srfi-4)
(u16vector->byte-vector value srfi-4)
(u16vector->list value srfi-4)
(u16vector-length value srfi-4)
(u16vector-ref value srfi-4)
(u16vector-set! value srfi-4)
(u16vector? value srfi-4)
(u32vector value srfi-4)
(u32vector->blob value srfi-4)
(u32vector->blob/shared value srfi-4)
(u32vector->byte-vector value srfi-4)
(u32vector->list value srfi-4)
(u32vector-length value srfi-4)
(u32vector-ref value srfi-4)
(u32vector-set! value srfi-4)
(u32vector? value srfi-4)
(u8vector value srfi-4)
(u8vector->blob value srfi-4)
(u8vector->blob/shared value srfi-4)
(u8vector->byte-vector value srfi-4)
(u8vector->list value srfi-4)
(u8vector-length value srfi-4)
(u8vector-ref value srfi-4)
(u8vector-set! value srfi-4)
(u8vector? value srfi-4)
(ucs-range->char-set value srfi-14)
(ucs-range->char-set! value srfi-14)
(uncaught-exception-reason value srfi-18)
(uncaught-exception? value srfi-18)
(unfold value srfi-1)
(unfold-right value srfi-1)
(unless syntax chicken)
(unmap-file-from-memory value posix)
(unregister-feature! value chicken)
(unsetenv value posix)
(unzip1 value srfi-1)
(unzip2 value srfi-1)
(unzip3 value srfi-1)
(unzip4 value srfi-1)
(unzip5 value srfi-1)
(use syntax chicken)
(user-information value posix)
(utc-time->seconds value posix)
(values value scheme)
(vector value scheme)
(vector->list value scheme)
(vector-copy! value chicken)
(vector-fill! value scheme)
(vector-length value scheme)
(vector-ref value scheme)
(vector-resize value chicken)
(vector-set! value scheme)
(vector? value scheme)
(version>=? value setup-api)
(void value chicken)
(warning value chicken)
(when syntax chicken)
(with-error-output-to-port value ports)
(with-error-output-to-port value ports)
(with-exception-handler value chicken)
(with-input-from-file value scheme)
(with-input-from-pipe value posix)
(with-input-from-port value ports)
(with-input-from-string value ports)
(with-output-to-file value scheme)
(with-output-to-pipe value posix)
(with-output-to-port value ports)
(with-output-to-string value ports)
(write value scheme)
(write-byte value extras)
(write-char value scheme)
(write-line value extras)
(write-string value extras)
(write-u8vector value srfi-4)
(xcons value srfi-1)
(xsubstring value srfi-13)
(yes-or-no? value utils)
(zero? value scheme)
(zip value srfi-1)
